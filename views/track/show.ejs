<% include ../_partials/head %>
  <% include ../_partials/messages %>
  <main>
    <article class="post">
      <% include _header %>
      <section class="track">
        <figure>
          <figcaption>
            <h2>
              Name: <span id="track-name-field" contenteditable="<%= canWrite %>"></span>
              <span class="editable-field-control">
                <i id="edit-track-name" class="far fa-edit"></i>
                <i id="cancel-edit-track-name" class="fas fa-trash" style="display:none;"></i>
                <i id="save-track-name" class="fas fa-paper-plane" style="display:none;"></i>
              </span>
            </h2>
            <a href="<%= `/${track.path.replace('uploads', 'track')}` %>">
              <%= `/${track.path.replace('uploads', 'track')}` %>
            </a>
          </figcaption>
          <p id="track-transcription-field" contenteditable="<%= canWrite %>"></p>
          <canvas id="visualizer"></canvas>
          <audio
            id="audio-source"
            controls
            src="<%= `/${track.path}` %>">
              Your browser does not support the
              <code>audio</code> element.
          </audio>
        </figure>
      </section>
      <% if (canWrite) { %>
        <% include _controls %>
      <% } %>

      <% include _feedbackControls %>
      <section class="notes">
        <% for (let note of track.notes) { %>
          <article class="note">
            <header>
              <% if (note.author._id.toString() === agent._id.toString() ||
                     track.recordist._id.toString() === agent._id.toString() ||
                     (process.env.SUDO && process.env.SUDO === agent.email)) { %>
                <% include _noteControls %>
              <% } %>
              <img class="avatar" src="<%= note.author.get('picture') %>" />
              <aside>
                <span><%= note.author.get('nickname') %></span>
                <div class="note-content"><%- marked(note.text) %></div>
              </aside>
            </header>
          </article>
        <% } %>
      </section>
      <section class="likes">
        <% for (let like of track.likes) { %>
          <article class="like">
            <header>
              <img class="avatar" src="<%= like.get('picture') %>" />
              <aside>
                <div><%= like.get('nickname') %> <i class="fas fa-heart">s</i> this</div>
              </aside>
            </header>
          </article>
        <% } %>
      </section>
    </article>
  </main>
  <script>
    let wave = new Wave();
    if (AudioContext) {
      wave.fromElement('audio-source','visualizer', { type: 'wave' });
    }


    /**
     * Edit track name buttons
     */
    const nameField = document.getElementById('track-name-field');
    const editButton = document.getElementById('edit-track-name');
    const cancelButton = document.getElementById('cancel-edit-track-name');
    const saveButton = document.getElementById('save-track-name');

    let _originalTrackName;

    function setTrackNameEditMode(e) {
      _originalTrackName = nameField.innerHTML;
      nameField.focus();
      editButton.style.display = 'none';
      cancelButton.style.display = '';
      saveButton.style.display = '';
    }

    function setTrackNameTextMode(e) {
      nameField.blur();
      editButton.style.display = '';
      cancelButton.style.display = 'none';
      saveButton.style.display = 'none';
    }

    function resetTrackNameField(e) {
      nameField.innerHTML = _originalTrackName;
      setTrackNameTextMode(e);
    }

    editButton.addEventListener('click', setTrackNameEditMode);
    cancelButton.addEventListener('click', resetTrackNameField);
    // The double-up is more to get the tests to pass...
    // Clicking works in tests, but not in real life.
    // Focus works in real life, but not in tests.
    nameField.addEventListener('focus', setTrackNameEditMode);
    nameField.addEventListener('click', setTrackNameEditMode);

    saveButton.addEventListener('click', e => {
      const messages = document.querySelector('.messages');
      const messageContainer = document.createElement('div');
      messageContainer.classList.add('alert');

      fetch("<%= `/${track.path.replace('uploads', 'track')}` %>", {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json; charset=UTF-8',
          'Accept': 'application/json'
        },
        body: JSON.stringify({
          name: nameField.innerHTML
        })
      })
      .then(res => {
        if (res.status === 201) {
          setTrackNameTextMode();
          messageContainer.classList.add('alert-success');
        }
        else {
          messageContainer.classList.add('alert-danger');
        }
        messages.appendChild(messageContainer);

        return res.json();
      })
      .then(data => {
        const message = document.createTextNode(data.message);
        messageContainer.appendChild(message);
      });
    });
  </script>

<% include ../_partials/footer %>

